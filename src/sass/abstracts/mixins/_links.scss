@use 'sass:map';
@use '../variables' as *;
@use './transition' as *;

@mixin baseLink($link-color: $linkColor, $link-hover: $linkHover) {
	@include animate;
	color: $link-color !important;
	text-decoration: none;

	&:hover {
		@include animate;
		color: $link-hover !important;
		text-decoration: none;
	}
}

// Hide the underlines from a link, except when hovering or focusing on it.
@mixin link-hover {
	text-decoration: none;
	&:hover,
	&:focus {
		text-decoration: underline;
	}
}

// Shortcut to assign colors to all link states.
@mixin link-colors($link, $visited, $hover, $active) {
	color: $link;
	&:visited {
		color: $visited;
	}
	&:hover,
	&:focus {
		color: $hover;
	}
	&:active {
		color: $active;
	}
}

// Remove default styles from links, making it appear as normal text.
@mixin link-unstyled($color: $color-text) {
	@include link-colors($color, $color, $color, $color);
	&:link,
	&:visited,
	&:hover,
	&:focus,
	&:active {
		text-decoration: none;
	}
}

// Link block pattern. Useful when a link contains several block elements.
// This makes all the containing elements clickable, but does not style them as
// links. Instead, you are expected to provide a class `.block-link-target`
// whose styles will be applied to style the child element that should behave
// and look like a link.
@mixin link-block($target: '.target') {
	@include link-unstyled;
	display: block;
	@if $target {
		#{$target} {
			@extend .block-link-target;
		}
	}
}
